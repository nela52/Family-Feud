package com.alexnelson.ff;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;
import java.io.IOException;

public class FamilyFued extends Canvas implements Runnable
{
	private static final long serialVersionUID = -5636455297197163180L;

	public static final int WIDTH = 1920, HEIGHT = 1080;

	private Thread thread;

	private boolean running = false;

	private BufferedImage spriteSheet = null;
	private BufferedImage intro = null;
	private BufferedImage background = null;
	private BufferedImage strike = null;

	public void init()
	{
		BufferedImageLoader loader = new BufferedImageLoader();
		try
		{
			spriteSheet = loader.loadImage("/spriteSheet.png");
			intro = loader.loadImage("/intro.png");
			background = loader.loadImage("/background.png");
			strike = loader.loadImage("/strike.png");
		} catch (IOException e)
		{
			e.printStackTrace();
		}

		//SpriteSheet ss = new SpriteSheet(spriteSheet);
	}

	public FamilyFued()
	{
		addKeyListener(new KeyInput());

		new Window(WIDTH, HEIGHT, "Family Feud", this);
	}

	public synchronized void start()
	{
		thread = new Thread(this);
		thread.start();
		running = true;
	}

	public synchronized void stop()
	{
		try
		{
			thread.join();
			running = false;
		} catch (Exception e)
		{
			e.printStackTrace();
		}
	}

	public synchronized void run()
	{
		requestFocus();
		init();
		long lastTime = System.nanoTime();
		double amountOfTicks = 60.0;
		double ns = 1000000000 / amountOfTicks;
		double delta = 0;
		long timer = System.currentTimeMillis();
		int frames = 0;
		while (running)
		{
			long now = System.nanoTime();
			delta += (now - lastTime) / ns;
			lastTime = now;
			while (delta >= 1)
			{
				tick();
				delta--;
			}

			if (running)
			{
				render();
			}

			frames++;

			if (System.currentTimeMillis() - timer > 1000)
			{
				timer += 1000;
				System.out.println("FPS: " + frames);
				frames = 0;
			}
		}
		stop();
	}

	private void tick()
	{

	}

	private void render()
	{
		BufferStrategy bs = getBufferStrategy();
		if (bs == null)
		{
			createBufferStrategy(3);
			return;
		}

		Graphics g = bs.getDrawGraphics();

		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGHT);

		//g.drawImage(background, 0, 0, this);
		g.drawImage(intro, 0, 0, this);

		Font font = new Font(Font.DIALOG, Font.PLAIN, 72);

		g = intro.getGraphics();
		g.setColor(Color.white);
		g.setFont(font);
		g.drawString("Please Enter Name:", 150, 500);

		//g.drawImage(strike, 295, 390, this);
		//g.drawImage(strike, 768, 390, this);
		//g.drawImage(strike, 1232, 390, this);

		g.dispose();
		bs.show();
	}

	public static void main(String[] args)
	{
		new FamilyFued();
	}
}